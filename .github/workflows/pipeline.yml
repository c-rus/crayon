name: Pipeline
on:
  push:

env:
  TARGET: crayon
  APP: canvas
  APP_PATH: ./target/release/examples
  IS_LIB: false

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x64
            ext: ''
          - os: windows-latest
            platform: windows-x64
            ext: '.exe'
          - os: macos-latest
            platform: macos-x64
            ext: ''

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3
          
      - name: Configure Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Enable Cargo caching
        uses: Swatinem/rust-cache@v2

      - name: Test
        run: cargo test

      - name: Build
        run: cargo build --release

      - name: Build application
        run: cargo build --release --example ${{ env.APP }}

      - name: Package application
        if: env.IS_LIB == 'false'
        run: |
          import shutil, os
          target = '${{ env.TARGET }}-${{ matrix.platform }}-${{ github.ref_name }}'
          print(target)
          # create intermediate artifact directory
          os.makedirs(target)
          # copy the executable into the final directory
          shutil.copyfile('${{ env.APP_PATH }}/${{ env.APP }}${{ matrix.ext }}', target+'/${{ env.APP }}${{ matrix.ext }}')
          # compress the final directory
          shutil.make_archive(target+'.zip', 'zip', root_dir=target, base_dir=target)
        shell: python

      - name: Upload ${{ matrix.platform }} artifact
        if: env.IS_LIB == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TARGET }}-${{ matrix.platform }}-${{ github.ref_name }}
          path: ./${{ env.TARGET }}-${{ matrix.platform }}-${{ github.ref_name }}.zip